name: Deploy

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write # required for AWS OIDC
  pull-requests: write

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::265088867231:role/github/tf-via-github-demo

      - name: Terraform init and validate
        run: |
          terraform init -backend-config="key=terraform.tfstate" -backend-config="bucket=stwalkerster-265088867231-demo-tfstate" -backend-config="dynamodb_table=stwalkerster-265088867231-demo-tfstatelock"

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: |
          terraform plan -no-color -out tfplan

      - name: Update Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan
            <details><summary>Show Plan</summary>
      
            \`\`\`\n
            ${{ steps.plan.outputs.stdout }}
            \`\`\`
      
            </details>
      
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
      
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })